<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <customErrors>
        <name>Throw_Overlap_Error</name>
        <label>Throw Overlap Error</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Ladders</targetReference>
        </connector>
        <customErrorMessages>
            <errorMessage>Overlapping Ladder dates are not allowed for this Project.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Throw_Overlap_Error_NRI</name>
        <label>Throw Overlap Error</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Ladders_NRI</targetReference>
        </connector>
        <customErrorMessages>
            <errorMessage>Overlapping Ladder dates are not allowed for this Project.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Check_Date_Overlap</name>
        <label>Check Date Overlap</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Overlap_Found1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Date__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Ladders.End_Date__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.End_Date__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Ladders.Start_Date__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Throw_Overlap_Error</targetReference>
            </connector>
            <label>Overlap Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Date_Overlap_NRI</name>
        <label>Check Date Overlap</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_Overlap_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Date__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Ladders_NRI.End_Date__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.End_Date__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Ladders_NRI.Start_Date__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Throw_Overlap_Error_NRI</targetReference>
            </connector>
            <label>Copy 1 of Overlap Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Record_Type</name>
        <label>Check Record Type</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Get_Existing_Ladders</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>if_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NRI</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Existing_Ladders_NRI</targetReference>
            </connector>
            <label>if yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>RT flow on Brokerage Scheme Overlapp {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RT flow on Brokerage Scheme Overlap</label>
    <loops>
        <name>Get_Ladders</name>
        <label>Get Ladders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Existing_Ladders</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Date_Overlap</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <name>Get_Ladders_NRI</name>
        <label>Get Ladders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Existing_Ladders_NRI</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Date_Overlap_NRI</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Existing_Ladders</name>
        <label>Get Existing Ladders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Ladders</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Project__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Project__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.End_Date__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Start_Date__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Ladder_Type__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>NRI</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Brokerage_Ladder__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Existing_Ladders_NRI</name>
        <label>Get Existing Ladders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Ladders_NRI</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Project__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Project__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.End_Date__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Start_Date__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Ladder_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NRI</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Brokerage_Ladder__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Record_Type</targetReference>
        </connector>
        <object>Brokerage_Ladder__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
